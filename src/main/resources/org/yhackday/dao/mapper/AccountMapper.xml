<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yhackday.dao.mapper.AccountMapper">
    <insert id="initUser" parameterType="org.yhackday.domain.UserStatus">
        insert into USER
            (user_id, life, room_id, direction, now_turn)
        values
            (
            #{userId}, #{life},
            #{roomId}, #{direction},
            #{nowTurn}
            )
    </insert>

    <insert id="initUserImage">
        insert into USER_ITEM
            (user_id, item_id)
        values
            (
            #{userId}, #{itemId}
            )
    </insert>

    <sql id="actionBase">
        select
        USER.user_id,
        USER.life,
        USER.room_id,
        USER.direction,
        USER.now_turn as limit_time,
        ROOM.room_id,
        ROOM.right_room_id,
        ROOM.is_right_partition_set,
        ROOM.left_room_id,
        ROOM.is_left_partition_set,
        ROOM.top_room_id,
        ROOM.is_top_partition_set,
        ROOM.bottom_room_id,
        ROOM.is_bottom_partition_set,
        ROOM.map_image_id,
        ROOM.explosion_value,
        ROOM.explosion_direction,
        USER_ITEMS.item_id as user_item_id,
        USER_ITEMS.item_name as user_item_name,
        USER_ITEMS.item_action as user_item_action,
        ROOM_ITEMS.item_id as room_item_id,
        ROOM_ITEMS.item_name as room_item_name,
        ROOM_ITEMS.item_action as room_item_action
        from
        USER
        join ROOM on USER.room_id = ROOM.room_id
        join ROOM_IMAGE on ROOM.room_image_id = ROOM_IMAGE.room_image_id
        join USER_ITEM on USER_ITEM.user_id = USER.user_id
        join ITEM as USER_ITEMS on USER_ITEM.item_id = USER_ITEMS.item_id
        join ITEM as ROOM_ITEMS on ROOM.item_id = ROOM_ITEMS.item_id
    </sql>

    <update id="updateUserLife">
        Update USER
        join ROOM on USER.room_id = ROOM.room_id
        <set>
            USER.life = USER.life - ROOM.explosion_value
        </set>
    </update>

    <update id="updateUserStatus">
        Update USER
        <set>
            USER.room_id = COALESCE(#{updateUserDto.roomId}, USER.room_id),
            USER.direction = COALESCE(#{updateUserDto.direction}, USER.direction),
        </set>
        where USER.user_id = #{userId};
    </update>

    <update id="updateUserTurn">
        Update USER
        <set>
            USER.now_turn = USER.now_turn + 1,
        </set>
        where USER.user_id = #{userId};
    </update>

    <select id="getUserStatusInfo" resultMap="userRequestMap">
        <include refid="actionBase"></include>
        where USER.user_id = #{userId};
    </select>

    <resultMap id="userRequestMap" type="org.yhackday.domain.dto.UserActionDto">
        <result property="limitTime" column="limit_time"/>
        <result property="hitPoint" column="life"/>
        <result property="alert" column="alert"/>
        <result property="map" column="map_image_id"/>
        <association property="userStatus" javaType="org.yhackday.domain.UserStatus">
            <result property="userId" column="user_id"/>
            <result property="life" column="life"/>
            <result property="direction" column="direction"/>
            <result property="roomId" column="room_id"/>
            <result property="nowTurn" column="now_turn"/>
        </association>
        <association property="room" javaType="org.yhackday.domain.Room">
            <result property="roomId" column="room_id"/>
            <result property="rightRoomId" column="right_room_id"/>
            <result property="rightPartition" column="is_right_partition_set"/>
            <result property="leftRoomId" column="left_room_id"/>
            <result property="leftPartition" column="is_left_partition_set"/>
            <result property="topRoomId" column="top_room_id"/>
            <result property="topPartition" column="is_top_partition_set"/>
            <result property="bottomRoomId" column="bottom_room_id"/>
            <result property="bottomPartition" column="is_bottom_partition_set"/>
            <result property="explosionValue" column="explosion_value"/>
            <result property="explosionDirection" column="explosion_direction"/>
        </association>
        <association property="userItems" javaType="org.yhackday.domain.Item">
            <result property="itemId" column="user_item_id"/>
            <result property="itemName" column="user_item_name"/>
            <result property="itemAction" column="user_item_action"/>
        </association>
        <association property="roomItems" javaType="org.yhackday.domain.Item">
            <result property="itemId" column="room_item_id"/>
            <result property="itemName" column="room_item_name"/>
            <result property="itemAction" column="room_item_action"/>
        </association>
    </resultMap>

    <select id="getImageUrl" resultMap="imageUrl">
        select
        ROOM_IMAGE.right_room_image_url,
        ROOM_IMAGE.left_room_image_url,
        ROOM_IMAGE.top_room_image_url,
        ROOM_IMAGE.bottom_room_image_url
        from
        ROOM_IMAGE
        join ROOM on ROOM_IMAGE.room_image_id = ROOM.room_image_id
        where
        ROOM.room_id = #{roomId};
    </select>
    <resultMap id="imageUrl" type="org.yhackday.domain.RoomImage">
        <result property="rightRoomImageUrl" column="right_room_image_url"/>
        <result property="leftRoomImageUrl" column="left_room_image_url"/>
        <result property="topRoomImageUrl" column="top_room_image_url"/>
        <result property="bottomRoomImageUrl" column="bottom_room_image_url"/>
    </resultMap>

    <select id="countAliveUser" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select count(*)
        from USER
        where USER.life > 0;
    </select>
    
    <delete id="deleteAll">
        delete from USER;
    </delete>

    <delete id="deleteUserItemAll">
        delete from USER_ITEM;
    </delete>
</mapper>